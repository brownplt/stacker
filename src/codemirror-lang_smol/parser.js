// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
const spec_Identifier = {__proto__:null,defgen:8, deffun:10, defvar:12, yield:14, while:16, "set!":18, if:20, let:22, cond:24, else:26, begin:28, lambda:30, generator:32, "λ":34}
export const parser = LRParser.deserialize({
  version: 14,
  states: "!pQYQPOOO!gQPO'#CrO!nQPO'#CuOOQO'#Cz'#CzOOQO'#Cv'#CvQYQPOOOOQO,59^,59^O!uQPO,59^OOQO,59a,59aO!|QPO,59aOOQO-E6t-E6tOOQO1G.x1G.xOOQO1G.{1G.{",
  stateData: "#T~OmOSPOS~ORROSROTROUROVROWROXROYROZRO[RO]RO^RO_RO`ROaRObROcROePOhQO~OdUO~PYOgWO~PYOdZO~PYOg[O~PYO",
  goto: "!`oPPPPPPPPPPPPPPPPPPPPPPpPPpxPPP!W]ROPQTVXQTOQVPQXQVYTVX]SOPQTVX",
  nodeNames: "⚠ LineComment Program Identifier defgen deffun defvar yield while set! if let cond else begin lambda generator λ String Boolean ) ( Application ] [ Application",
  maxTerm: 30,
  nodeProps: [
    ["openedBy", 20,"(",23,"["],
    ["closedBy", 21,")",24,"]"]
  ],
  skippedNodes: [0,1],
  repeatNodeCount: 1,
  tokenData: "&P~RbXY!ZYZ!Z]^!Zpq!Zqr!lrs#Wst$txy%Syz%X}!O!l!Q![!l!]!^%^!a!b!l!c!}!l!}#O%u#P#Q%z#R#S!l#T#o!l~!`Sm~XY!ZYZ!Z]^!Zpq!Z~!qVR~qr!l}!O!l!Q![!l!a!b!l!c!}!l#R#S!l#T#o!l~#ZVOr#Wrs#ps#O#W#O#P#u#P;'S#W;'S;=`$n<%lO#W~#uOb~~#xRO;'S#W;'S;=`$R;=`O#W~$UWOr#Wrs#ps#O#W#O#P#u#P;'S#W;'S;=`$n;=`<%l#W<%lO#W~$qP;=`<%l#W~$wQ#Y#Z$}#h#i$}~%SOc~~%XOe~~%^Od~~%cSP~OY%^Z;'S%^;'S;=`%o<%lO%^~%rP;=`<%l%^~%zOh~~&POg~",
  tokenizers: [0],
  topRules: {"Program":[0,2]},
  specialized: [{term: 3, get: (value) => spec_Identifier[value] || -1}],
  tokenPrec: 0
})

